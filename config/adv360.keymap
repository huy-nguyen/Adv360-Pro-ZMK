
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

#define HYPER(key) LS(LC(LA(LG(key))))

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
/* Left Half - Numbers Row - 7 keys */
&kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4            &kp N5                   &tog 1

/* Right Half - Numbers Row - 7 keys */
&mo 3       &kp N6     &kp N7     &kp N8     &kp N9          &kp N0  &kp MINUS

/* Left Half - Q Row - 7 keys */
&kp TAB      &kp Q     &kp W     &kp E      &kp R             &kp T                    &kp HYPER(LEFT_BRACKET)

/* Right Half - Y Row - 7 keys */
&none        &kp Y      &kp U      &kp I      &kp O           &kp P   &kp BSLH

/* Left Half - A Row - 7 keys */
&kp ESC      &kp A     &kp S     &kp D      &kp F             &kp G                    &kp HYPER(RIGHT_BRACKET)

/* Left Half - Thumb Cluster First Row - 2 keys */
&kp LEFT_META     &kp LEFT_CONTROL

/* Right Half - Thumb Cluster First Row - 2 keys */
&kp RIGHT_CONTROL  &kp RIGHT_META

/* Right Half - H Row - 7 keys */
&none     &kp H   &kp J      &kp K    &kp L  &kp SEMI    &kp SQT

/* Left Half - Z Row - 6 keys */
&kp LSHFT      &kp Z     &kp X     &kp C      &kp V             &kp B

/* Left Half - Blanks - 2 keys */
&none          &none

/* Left Half - Thumb Cluster Second Row Rightmost Key - 1 keys */
&kp LEFT_ALT

/* Left Half - Blanks - 1 keys */
&none

/* Right Half - Blanks - 1 keys */
&none

/* Right Half - Thumb Cluster Second Row Leftmost Key- 1 keys */
&kp RIGHT_ALT

/* Right Half - Blanks - 2 keys */
&none      &none

/* Right Half - N Row - 6 keys */
&kp N   &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT


/* Left Half - Last Row - 5 keys */
&mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT

/* Left Half - Thumb Cluster Last Row - 3 keys */
&kp BACKSPACE  &kp DELETE  &kp END

/* Right Half - Thumb Cluster Last Row - 3 keys */
&kp PG_DN  &kp ENTER  &kp SPACE

/* Right Half - Last Row - 5 keys */
&kp UP        &kp DOWN   &kp LBKT  &kp RBKT   &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4    &kp N5             &trans      &mo 3     &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY   &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R     &kp T              &none      &none      &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS    &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F     &kp G              &none  &kp LCTRL   &kp LALT                                 &kp LGUI        &kp RCTRL       &none     &kp H  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V     &kp B              &none      &none   &kp HOME       &none         &none      &kp PG_UP            &none       &none     &kp N  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT  &kp BSPC            &kp DEL    &kp END  &kp PG_DN   &kp ENTER     &kp KP_N0         &kp UP         &kp DOWN  &kp KP_DOT  &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
/* Left Half - Numbers Row - 7 keys */
&kp F1  &kp F2                 &kp F3                  &kp F4                  &kp F5                  &kp F6                  &tog 1

/* Right Half - Numbers Row - 7 keys */
&mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12

/* Left Half - Q Row - 7 keys */
 &trans  &trans                 &trans                  &kp HYPER(E)   &kp HYPER(R)   &kp HYPER(T)            &none

/* Right Half - Y Row - 7 keys */
&none  &kp HYPER(Y)  &trans  &trans   &trans   &trans   &trans

/* Left Half - A Row - 7 keys */
 &trans  &kp HYPER(A)  &kp HYPER(S)   &kp HYPER(D)   &kp HYPER(F)  &kp HYPER(G)         &none

/* Left Half - Thumb Cluster First Row - 2 keys */
 &trans  &trans

/* Right Half - Thumb Cluster First Row - 2 keys */
 &trans   &trans

/* Right Half - H Row - 7 keys */

 &none  &trans  &trans  &trans  &trans  &trans  &trans

/* Left Half - Z Row - 6 keys */
 &trans  &kp HYPER(Z)  &trans                  &kp HYPER(C)   &trans                  &kp HYPER(B)

/* Left Half - Blanks - 2 keys */
 &none   &none

/* Left Half - Thumb Cluster Second Row Rightmost Key - 1 keys */
 &kp HOME

/* Left Half - Blanks - 1 keys */
 &none

/* Right Half - Blanks - 1 keys */
 &none

/* Right Half - Thumb Cluster Second Row Leftmost Key- 1 keys */
 &kp PAGE_UP

/* Right Half - Blanks - 2 keys */
 &none    &none

/* Right Half - N Row - 6 keys */
 &trans  &trans  &trans  &trans  &trans  &trans

/* Left Half - Last Row - 5 keys */
 &trans  &trans                 &trans                  &trans                  &trans

/* Left Half - Thumb Cluster Last Row - 3 keys */
 &trans                  &trans   &kp END

/* Right Half - Thumb Cluster Last Row - 3 keys */
 &kp PAGE_DOWN  &trans  &trans

/* Right Half - Last Row - 5 keys */
 &trans   &trans   &trans  &trans  &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4                             &none       &trans  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                   &none
  &none         &none         &none         &none         &none            &none                       &bootloader  &bootloader         &none         &none            &none         &none         &none                   &none
  &none         &none         &none         &none         &none            &none            &rgb_ug RGB_MEFS_CMD 5   &bt BT_CLR         &none                                   &bt BT_CLR    &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5   &none   &none   &none   &none   &none   &none
  &none         &none         &none         &none         &none            &none                             &none        &none         &none         &none            &none         &none         &none                   &none   &none   &none   &none   &none   &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC  &rgb_ug RGB_TOG                        &bl BL_TOG        &none         &none    &bl BL_TOG  &rgb_ug RGB_TOG    &bl BL_INC    &bl BL_DEC                   &none   &none   &none
            >;
        };

    };
};
